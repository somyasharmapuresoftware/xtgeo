name: cibuildwheel

on: [push, pull_request]
  #pull_request:
   #   branches: [master, "*postfix"]

# Verify that wheel build jobs succeed
jobs:
  build_linux_cibuildwheel:
    name: CIBW python ${{ matrix.cibw_python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    env:
      CIBW_BEFORE_TEST: >
        pushd {project} &&
        pip install -r requirements/requirements.txt &&
        pip install -r requirements/requirements_test.txt &&
        git clone --depth 1 https://github.com/equinor/xtgeo-testdata ../xtgeo-testdata
      CIBW_TEST_COMMAND: >
        pushd {project} &&
        pytest tests/test_common --disable-warnings -x --hypothesis-profile ci --generate-plots
      CIBW_BUILD: ${{ matrix.cibw_python }}-manylinux_x86_64
      CIBW_MANYLINUX_X86_64_IMAGE: manylinux2010

    strategy:
      matrix:
        os: [ubuntu-latest]
        cibw_python: [cp36, cp39]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install cibuildwheel
        run: >
          python -m pip install pip -U &&
          python -m pip install wheel &&
          python -m pip install cibuildwheel

      - name: Build wheels and test
        run: |
          python -m cibuildwheel --output-dir wheelhouse

  build_linux_aarch64_cibuildwheel:
    name: CIBW python ${{ matrix.cibw_python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    env:
      CIBW_BEFORE_TEST: >
        pushd {project} &&
        pip install -r requirements/requirements.txt &&
        pip install -r requirements/requirements_test.txt &&
        git clone --depth 1 https://github.com/equinor/xtgeo-testdata ../xtgeo-testdata
      CIBW_TEST_COMMAND: >
        pushd {project} &&
        pytest tests/test_common --disable-warnings -x --hypothesis-profile ci --generate-plots
      CIBW_BUILD: ${{ matrix.cibw_python }}-manylinux2014_aarch64
      CIBW_MANYLINUX2014_AARCH64_IMAGE: manylinux2014_aarch64
      py: /opt/python/${{ matrix.cibw_python }}/bin/python
      img: quay.io/pypa/manylinux2014_aarch64

    strategy:
      matrix:
        os: [ubuntu-latest]
        cibw_python: ['cp36-cp36m', 'cp37-cp37m', 'cp38-cp38', 'cp39-cp39']
        
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
      - name: Building Linux Aarch64 Wheel
        run: |
          docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
          ${{ env.img }} \
          bash -exc '${{ env.py }} -m venv .env && \
          source .env/bin/activate && \
          echo "Install cibuildwheel" && \
          python -m pip install pip -U && \
          python -m pip install wheel && \
          python -m pip install cibuildwheel && \
          echo "Build wheels and test" && \
          python -m cibuildwheel --output-dir wheelhouse && \
          deactivate'

  build_macos_cibuildwheel:
    name: CIBW python ${{ matrix.cibw_python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    env:
      CIBW_BEFORE_TEST: >
        pushd {project} &&
        pip install -r requirements/requirements.txt &&
        pip install -r requirements/requirements_test.txt &&
        git clone --depth 1 https://github.com/equinor/xtgeo-testdata ../xtgeo-testdata
      CIBW_TEST_COMMAND: >
        pushd {project} &&
        pytest tests --disable-warnings -x --hypothesis-profile ci
      CIBW_BUILD: ${{ matrix.cibw_python }}-macosx_x86_64

    strategy:
      matrix:
        os: [macos-latest]
        python-version: [3.8] # PY version for "Install cibuildwheel", default is 2.7!
        cibw_python: [cp36, cp39]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install cibuildwheel
        run: >
          python -m pip install pip -U &&
          python -m pip install wheel &&
          python -m pip install cibuildwheel

      - name: Build wheels and test python < 3.9
        if: matrix.cibw_python != 'cp39'
        run: >
          python -m cibuildwheel --output-dir wheelhouse

      - name: Build wheels and test python 3.9
        if: matrix.cibw_python == 'cp39'
        # note tests are a bit restricted due to missing pytables wheel
        env:
          CIBW_TEST_COMMAND: >
            pushd {project} &&
            pytest tests --disable-warnings --ignore tests/test_well -x --hypothesis-profile ci

        run: |
          python -m cibuildwheel --output-dir wheelhouse

  # pitfall for Windows, while this works for linux and macos:
  # run: |
  #    command1
  #    command2
  # it will not work for windows! Only command1 is executed; hence this syntax is
  # replaced with:
  # run: >
  #     command1 &&
  #     command2

  build_windows_cibuildwheel:
    name: CIBW python ${{ matrix.cibw_python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    env:
      CIBW_BEFORE_TEST: >
        pushd {project} &&
        pip install -r requirements/requirements.txt &&
        pip install -r requirements/requirements_test.txt &&
        git clone --depth 1 https://github.com/equinor/xtgeo-testdata ../xtgeo-testdata

      # a test with forks is skipped as this calls python in a subprocess, where
      # the cibuildwheel on windows cannot find the xtgeo module
      CIBW_TEST_COMMAND: >
        pushd {project} && dir &&
        pytest tests -x --hypothesis-profile ci --ignore-glob="*forks.py"

      CIBW_BUILD: ${{ matrix.cibw_python }}-win_amd64

    strategy:
      matrix:
        os: [windows-latest]
        cibw_python: [cp36, cp39]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install cibuildwheel
        run: >
          python -m pip install pip -U &&
          python -m pip install wheel &&
          python -m pip install cibuildwheel

      - name: Build wheels and test python < 3.9
        if: matrix.cibw_python != 'cp39'
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - name: Build wheels and test python 3.9
        if: matrix.cibw_python == 'cp39'
        # note tests are a bit restricted due to missing pytables wheel
        env:
          CIBW_TEST_COMMAND: >
            pushd {project} &&
            pytest tests --disable-warnings --hypothesis-profile ci --ignore tests/test_well
            --ignore-glob="*forks.py" -x

        run: |
          python -m cibuildwheel --output-dir wheelhouse
